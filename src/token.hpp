#ifndef TOKEN
#define TOKEN

namespace Token {

  enum {
    IDENTIFIER = 1,
    NUMBER,
    MULTIPLICATION,
    PLUS,
    MINUS,
    DIVISION,
    MODULE,
    GREATER,
    GREATER_OR_EQUAL,
    LESS,
    LESS_OR_EQUAL,
    EQUAL,
    DOUBLE_EQUAL,
    NOT_EQUAL = 15,
    PARENTHESES_O,
    PARENTHESES_C,
    BRACE_O,
    BRACE_C,
    SEMICOLON,
    COMMENT,
    COMMENT_O = 23,
    COMMA,
    ERROR,
    IF,
    INT,
    VOID,
    BREAK,
    CONTINUE,
    ELSE,
    FOR,
    WHILE,
    DO,
    RETURN,
    END_OF_FILE,
    TRANSLATION_UNIT,
    EXTERNAL_DECLARATION,
    SPECIFIER,
    _EXTERNAL_DECLARATION,
    PARAMETER_LIST,
    _PARAMETER_LIST,
    INITIALIZER,
    _INITIALIZER,
    COMPOUND_S,
    _COMPOUND_S,
    STATEMENT_LIST,
    SELECTION_S,
    _SELECTION_S,
    ITERATION_S,
    FOR_S,
    _FOR_S,
    EXPRESSION_S,
    EXPRESSION,
    EQ,
    OP,
    _OP,
    ROP,
    _ROP,
    E,
    _E,
    T,
    _T,
    F,
    FD,
    F_LIST,
    _F_LIST,
    JUMP_S,
    _RR,
    DECLARATION_LIST,
    DECLARATOR
  };
};
#endif
